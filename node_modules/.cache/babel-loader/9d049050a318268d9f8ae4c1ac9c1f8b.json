{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Luca\\\\Desktop\\\\Nuova cartella\\\\Covid-Data\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{WorldMap}from\"react-svg-worldmap\";import'./Map.css';import{useContext,useState}from\"react\";import{CountriesContext}from\"./App\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var spacing=function spacing(x){x=x.replace(/([A-Z])/g,\" $1\");x=x.charAt(0).toUpperCase()+x.slice(1);return x;};function Map(){var _useState=useState('cases'),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var map=[];var _useContext=useContext(CountriesContext),_useContext2=_slicedToArray(_useContext,3),data=_useContext2[0],country=_useContext2[1],setCountry=_useContext2[2];map=data.map(function(x){if(x.countryInfo.iso2!==null){return{country:x.countryInfo.iso2.toLowerCase(),value:x[selected]};}else{return{country:'0',value:''};}});map=map.filter(function(x){return x.country!=='0';});var clickAction=function clickAction(_ref){var countryCode=_ref.countryCode,countryName=_ref.countryName;setCountry({code:countryCode,name:countryName});};return/*#__PURE__*/_jsxs(\"div\",{className:\"MapContainer\",children:[/*#__PURE__*/_jsx(WorldMap,{data:map,size:\"responsive\",color:\"red\",backgroundColor:\"#101520\",frameColor:\"white\",frame:\"true\",title:/*#__PURE__*/_jsx(\"div\",{style:{padding:'2em'},children:/*#__PURE__*/_jsx(\"select\",{id:\"country\",value:selected,onChange:function onChange(e){setSelected(e.target.value);},children:Object.keys(data[0]).filter(function(x){return Number.isFinite(data[0][x])&&x!=='updated';}).map(function(x,index){return/*#__PURE__*/_jsx(\"option\",{children:spacing(x)},index);})})}),borderColor:\"white\",onClickFunction:clickAction,style:{margin:'0 auto'}}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'0.8em',padding:0,margin:0},children:\"click on a country\"})]});}export default Map;","map":{"version":3,"sources":["C:/Users/Luca/Desktop/Nuova cartella/Covid-Data/src/Map.js"],"names":["WorldMap","useContext","useState","CountriesContext","spacing","x","replace","charAt","toUpperCase","slice","Map","selected","setSelected","map","data","country","setCountry","countryInfo","iso2","toLowerCase","value","filter","clickAction","countryCode","countryName","code","name","padding","e","target","Object","keys","Number","isFinite","index","margin","fontSize"],"mappings":"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","sourcesContent":["import {WorldMap} from \"react-svg-worldmap\";\r\nimport './Map.css'\r\nimport {useContext, useState} from \"react\";\r\nimport {CountriesContext} from \"./App\";\r\n\r\nexport const spacing = (x) => {\r\n    x = x.replace(/([A-Z])/g,\" $1\")\r\n    x = x.charAt(0).toUpperCase() + x.slice(1)\r\n    return x\r\n}\r\n\r\nfunction Map() {\r\n    let [selected,setSelected] = useState('cases')\r\n    let map=[]\r\n    const [data,country,setCountry] = useContext(CountriesContext)\r\n\r\n    map = data.map(x => {\r\n        if(x.countryInfo.iso2 !== null) {\r\n            return ({country: x.countryInfo.iso2.toLowerCase(), value: x[selected]})\r\n        }\r\n        else {return ({country: '0', value: ''})}\r\n    })\r\n    map=map.filter(x=>{return(x.country !== '0')})\r\n\r\n    const clickAction = ({countryCode,countryName}) => {\r\n        setCountry({code: countryCode,name: countryName})\r\n    };\r\n\r\n    return(\r\n        <div className='MapContainer'>\r\n        <WorldMap\r\n            data={map}\r\n            size='responsive'\r\n            color='red'\r\n            backgroundColor='#101520'\r\n            frameColor='white'\r\n            frame='true'\r\n            title={<div style={{padding: '2em'}}>\r\n                    <select id=\"country\" value={selected} onChange={(e)=>{setSelected(e.target.value)}}>\r\n                        {\r\n                            Object.keys(data[0]).filter((x)=>{\r\n                                return(Number.isFinite(data[0][x]) && x!=='updated')\r\n                            }).map((x,index)=>{\r\n                                return(<option key={index}>{spacing(x)}</option>)\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                }\r\n            borderColor='white'\r\n            onClickFunction={clickAction}\r\n            style={{margin: '0 auto'}}\r\n        />\r\n            <p style={{fontSize: '0.8em',padding: 0,margin: 0}}>click on a country</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}